---
- hosts: "{{MasterIP}}"
  remote_user: root
  vars_files:
  - variables
  tasks:

  - name: Cambiar hostname "{{MasterFQDN}}"
    hostname:
      name: "{{MasterFQDN}}"

- hosts: "{{InfraIP}}"
  remote_user: root
  vars_files:
  - variables
  tasks:

  - name: Cambiar hostname "{{InfraFQDN}}"
    hostname:
      name: "{{InfraFQDN}}"

- hosts: "{{Worker1IP}}"
  remote_user: root
  vars_files:
  - variables
  tasks:

  - name: Cambiar hostname "{{Worker1FQDN}}"
    hostname:
      name: "{{Worker1FQDN}}"

- hosts: "{{Worker2IP}}"
  remote_user: root
  vars_files:
  - variables
  tasks:

  - name: Cambiar hostname "{{Worker2FQDN}}"
    hostname:
      name: "{{Worker2FQDN}}"

- hosts: "{{Worker3IP}}"
  remote_user: root
  vars_files:
  - variables
  tasks:

  - name: Cambiar hostname "{{Worker3FQDN}}"
    hostname:
      name: "{{Worker3FQDN}}"

- hosts: openshift_prereqs
  remote_user: root
  vars_files:
  - variables
  tasks:

  - name: Creacion de directorio para montar ISO 
    file:
      path: /mnt/cdrom
      state: directory

  - name: Montaje de ISO
    mount:
      path: /mnt/cdrom/
      src: /dev/sr0
      fstype: iso9660
      opts: ro
      state: mounted

  - name: Creacion de repositorio local
    yum_repository:
      name: rhel
      description: rhel
      baseurl: file:///mnt/cdrom/
      enabled: 1
      metadata_expire: -1

  - name: Importar archivo key para yum
    rpm_key:
      state: present
      key: /mnt/cdrom/RPM-GPG-KEY-redhat-release

  - name: Instalar nfs-utils
    yum:
      name:
        - nfs-utils
      state: present

  - name: Desmontar un volumen
    mount:
      path: /mnt/cdrom
      state: unmounted

  - name: Borrar archivos de /etc/yum.repos.d/
    file:
      state: "{{ item }}"
      path: "/etc/yum.repos.d/"
      owner: root
      group: root
      mode: '0755'
    with_items:
      - absent
      - directory

  - name: Creacion de directorio para montar RHEL repositorios Openshift
    file:
      path: "{{MontajeNFS}}"
      mode: 777
      owner: root
      group: root
      state: directory

  - name: Montar nfs
    mount:
      path: "{{MontajeNFS}}"
      src: "{{HostnameNFS}}:{{NFSPath}}"
      fstype: nfs
      state: mounted

  - name: Copiar repositorios del nfs al /etc/yum.repos.d/
    copy:
      src: "{{ item.src }}"
      dest: "{{ item.dest }}"
      mode: "{{item.mode}}"
      remote_src: yes   ### esto para indicar que es en server remoto, si no le indicamos esto lo copia desde el server de ansible
    with_items:
       - { src: '{{MontajeNFS}}/repos/ansible.repo',dest: '/etc/yum.repos.d', mode: '0777'}
       - { src: '{{MontajeNFS}}/repos/rhel-7-server-ansible-2.6.repo',dest: '/etc/yum.repos.d', mode: '0777'}
       - { src: '{{MontajeNFS}}/repos/rhel-7-server-extras.repo',dest: '/etc/yum.repos.d', mode: '0777'}
       - { src: '{{MontajeNFS}}/repos/rhel-7-server-ose-3.11.repo',dest: '/etc/yum.repos.d', mode: '0777'}
       - { src: '{{MontajeNFS}}/repos/rhel-7-server.repo',dest: '/etc/yum.repos.d', mode: '0777'}

  - name: Instalar librerias necesarias para openshift
    yum:
      name:
        - git
        - screen
        - nano
        - vim
        - net-tools
        - python-cryptography
        - atomic-openshift-clients
        - python-devel
        - python-passlib
        - wget
        - unzip
        - curl
        - iptables-services
        - bind-utils
        - "@Development Tools"
        - docker-1.13.1
        - bridge-utils
        - NetworkManager
        - bash-completion
        - kexec-tools
        - sos
        - psacct
        - openssl-devel
        - sshpass
        - httpd-tools
        - pyOpenSSL
        - java-1.8.0-openjdk-headless
      state: present

  - name: Actualizar paquetes
    yum:
      name: '*'
      state: latest

  - name: Modificando DNS en archivo ifcfg-ens33
    lineinfile:
      path: /etc/sysconfig/network-scripts/ifcfg-ens33
      regexp: '^DNS1="8.8.8.8"'
      insertafter: '^#DNS1="8.8.8.8"'
      line: DNS1="{{DNSServer}}"

  - name: Reiniciar las máquinas para hacer todos los cambios sean efectivos
    reboot:
      reboot_timeout: 120

  - name: Esperar 1 minuto mientras las máquinas inician
    wait_for_connection:
      delay: 30
      timeout: 60

  - name: Hacer backup del docker-storage-setup
    copy:
      src: /etc/sysconfig/docker-storage-setup
      dest: /etc/sysconfig/docker-storage-setup.bk
      owner: root
      group: root
      mode: '0644'
      remote_src: yes
      backup: yes

  - name: Modificar docker-storage
    lineinfile:
      path: /etc/sysconfig/docker-storage-setup
      line: 'VG=docker-vg'

  - name: Modificar docker-storage
    lineinfile:
      path: /etc/sysconfig/docker-storage-setup
      line: 'DEVS="{{DiscoNFS}}"'

  - name: Modificar docker-storage
    lineinfile:
      path: /etc/sysconfig/docker-storage-setup
      line: 'VG=DOCKER'

  - name: Modificar docker-storage
    lineinfile:
      path: /etc/sysconfig/docker-storage-setup
      line: 'SETUP_LVM_THIN_POOL=yes'
  
  - name: Modificar docker-storage
    lineinfile:
      path: /etc/sysconfig/docker-storage-setup
      line: 'DATA_SIZE="100%FREE"'

  - name: Verificar docker-storage-setup
    command: docker-storage-setup

  - name: Detener servicio Docker
    systemd:
      state: stopped
      name: docker.service

  - name: Borrar directorio de docker
    file:
      path: /var/lib/docker
      state: absent

  - name: Verificar docker-storage-setup
    command: wipefs --all {{DiscoNFS}}

  - name: Iniciar servicio Docker
    systemd:
      state: started
      name: docker.service

  - name: Habilitar servicio Docker
    systemd:
      name: docker.service
      enabled: yes
      masked: no

  - name: Habilitar servicio NetworkManager
    systemd:
      name: NetworkManager
      enabled: yes
      masked: no

- hosts: "{{MasterIP}}"
  remote_user: root
  vars_files:
  - variables
  tasks:
      
  - name: Instalar paquetes despues del reinicio
    yum:
      name:
        - pyOpenSSL
        - openshift-ansible
        - ansible-2.6*
      state: present

  - name: Creacion de directorio 
    file:
      path: /etc/origin/master/
      state: directory

  - name: Crear la cuenta de usuario para login opensift webui
    htpasswd:
      path: "/etc/origin/master/htpasswd"
      name: admin
      password: admin
      crypt_scheme: md5_crypt

  - name: Generate SSH keys
    shell: ssh-keygen -b 2048 -t rsa -f /root/.ssh/id_rsa -q -N ""
    args:
      creates: /root/.ssh/id_rsa

  - name: Generar ssh de acceso a los servers
    command: sshpass -p "{{PasswordServers}}" ssh-copy-id root@"{{ item }}" -o StrictHostKeyChecking=no
    with_items:
       - "{{MasterIP}}"
       - "{{InfraIP}}"
       - "{{Worker1IP}}"
       - "{{Worker2IP}}"
       - "{{Worker3IP}}"